#!/bin/bash

# Script para empacotar execut√°veis para distribui√ß√£o
# Uso: ./package.sh [version]

set -e

PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
VERSION="${1:-1.0.0}"

echo "üì¶ SecurityChecker Package Script"
echo "================================="
echo "Vers√£o: $VERSION"
echo ""

# Detectar sistema operacional
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    OS="linux"
    ARCH="x64"
    EXT=""
elif [[ "$OSTYPE" == "darwin"* ]]; then
    OS="macos"
    ARCH="x64"
    EXT=""
else
    echo "‚ùå Sistema operacional n√£o suportado para este script"
    exit 1
fi

BUILD_DIR="$PROJECT_DIR/build-$OS"
PACKAGE_DIR="$PROJECT_DIR/packages"
DIST_DIR="$PACKAGE_DIR/SecurityChecker-$VERSION-$OS-$ARCH"

# Verificar se execut√°vel existe
EXECUTABLE="$BUILD_DIR/SecurityChecker$EXT"
if [[ ! -f "$EXECUTABLE" ]]; then
    echo "‚ùå Execut√°vel n√£o encontrado: $EXECUTABLE"
    echo "   Execute primeiro: ./build.sh"
    exit 1
fi

echo "üîç Execut√°vel encontrado: $EXECUTABLE"

# Criar diret√≥rio de distribui√ß√£o
echo "üìÅ Criando pacote em: $DIST_DIR"
rm -rf "$DIST_DIR"
mkdir -p "$DIST_DIR"

# Copiar execut√°vel
echo "üìã Copiando execut√°vel..."
cp "$EXECUTABLE" "$DIST_DIR/"

# Copiar arquivos de dados
echo "üìã Copiando arquivos de dados..."
cp "$PROJECT_DIR/data/vulnerabilities.json" "$DIST_DIR/"

# Copiar documenta√ß√£o
echo "üìã Copiando documenta√ß√£o..."
cp "$PROJECT_DIR/README.md" "$DIST_DIR/"

# Criar script de execu√ß√£o
echo "üìã Criando script de execu√ß√£o..."
if [[ "$OS" == "linux" ]]; then
    cat > "$DIST_DIR/run.sh" << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
echo "üõ°Ô∏è  SecurityChecker"
echo "=================="
echo ""
if [[ $EUID -ne 0 ]]; then
    echo "‚ö†Ô∏è  Este programa precisa ser executado como root."
    echo "   Execute: sudo ./run.sh"
    exit 1
fi
./SecurityChecker
EOF
    chmod +x "$DIST_DIR/run.sh"
elif [[ "$OS" == "macos" ]]; then
    cat > "$DIST_DIR/run.sh" << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
echo "üõ°Ô∏è  SecurityChecker"
echo "=================="
echo ""
if [[ $EUID -ne 0 ]]; then
    echo "‚ö†Ô∏è  Este programa precisa ser executado como root."
    echo "   Execute: sudo ./run.sh"
    exit 1
fi
./SecurityChecker
EOF
    chmod +x "$DIST_DIR/run.sh"
fi

# Criar arquivo de informa√ß√µes
echo "üìã Criando arquivo de informa√ß√µes..."
cat > "$DIST_DIR/INFO.txt" << EOF
SecurityChecker v$VERSION
========================

Sistema: $OS $ARCH
Data de build: $(date)

INSTRU√á√ïES DE USO:
==================

1. Execute como administrador/root:
   - Linux/macOS: sudo ./run.sh
   - Ou diretamente: sudo ./SecurityChecker

2. O programa ir√°:
   - Detectar automaticamente seu sistema operacional
   - Verificar vulnerabilidades conhecidas
   - Oferecer corre√ß√µes autom√°ticas

ARQUIVOS INCLUSOS:
==================
- SecurityChecker: Execut√°vel principal
- vulnerabilities.json: Defini√ß√µes de vulnerabilidades
- run.sh: Script de execu√ß√£o (Linux/macOS)
- README.md: Documenta√ß√£o completa
- INFO.txt: Este arquivo

REQUISITOS:
===========
- Privil√©gios de administrador/root
- Sistema operacional suportado (Windows/Linux/macOS)

SUPORTE:
========
- GitHub: https://github.com/seu-usuario/securitychecker
- Issues: https://github.com/seu-usuario/securitychecker/issues

LICEN√áA:
========
MIT License - Veja README.md para detalhes completos.
EOF

# Verificar depend√™ncias din√¢micas (Linux)
if [[ "$OS" == "linux" ]]; then
    echo "üîç Verificando depend√™ncias din√¢micas..."
    echo "Depend√™ncias do execut√°vel:" > "$DIST_DIR/DEPENDENCIES.txt"
    ldd "$EXECUTABLE" >> "$DIST_DIR/DEPENDENCIES.txt" 2>/dev/null || echo "N√£o foi poss√≠vel listar depend√™ncias" >> "$DIST_DIR/DEPENDENCIES.txt"
fi

# Criar arquivo compactado
echo "üóúÔ∏è  Criando arquivo compactado..."
cd "$PACKAGE_DIR"
ARCHIVE_NAME="SecurityChecker-$VERSION-$OS-$ARCH.tar.gz"
tar -czf "$ARCHIVE_NAME" "SecurityChecker-$VERSION-$OS-$ARCH"

echo ""
echo "‚úÖ Pacote criado com sucesso!"
echo ""
echo "üì¶ Arquivos gerados:"
echo "   Diret√≥rio: $DIST_DIR"
echo "   Arquivo:   $PACKAGE_DIR/$ARCHIVE_NAME"
echo ""
echo "üìä Tamanho do pacote:"
ls -lh "$PACKAGE_DIR/$ARCHIVE_NAME"
echo ""
echo "üöÄ Para distribuir:"
echo "   1. Teste o pacote em uma m√°quina limpa"
echo "   2. Fa√ßa upload para GitHub Releases"
echo "   3. Documente os requisitos do sistema"
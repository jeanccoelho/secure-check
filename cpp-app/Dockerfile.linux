# Dockerfile para build Linux
FROM ubuntu:22.04

# Evitar prompts interativos
ENV DEBIAN_FRONTEND=noninteractive

# Instalar depend√™ncias
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    qt6-base-dev \
    qt6-tools-dev \
    libgl1-mesa-dev \
    libglu1-mesa-dev \
    libxkbcommon-dev \
    libxkbcommon-x11-dev \
    libxcb1-dev \
    libxcb-xkb-dev \
    libxcb-icccm4-dev \
    libxcb-image0-dev \
    libxcb-keysyms1-dev \
    libxcb-randr0-dev \
    libxcb-render-util0-dev \
    libxcb-shape0-dev \
    libxcb-sync-dev \
    libxcb-xfixes0-dev \
    libxcb-xinerama0-dev \
    libfontconfig1-dev \
    libfreetype6-dev \
    libx11-dev \
    libx11-xcb-dev \
    libxext-dev \
    libxfixes-dev \
    libxi-dev \
    libxrender-dev \
    libxrandr-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY . .

# Build
RUN mkdir -p build-linux && cd build-linux && \
    cmake -DCMAKE_BUILD_TYPE=Release .. && \
    make -j$(nproc)

# Preparar output
RUN mkdir -p /output && \
    cp build-linux/SecurityChecker /output/ && \
    cp data/vulnerabilities.json /output/ && \
    cp README.md /output/ && \
    echo '#!/bin/bash' > /output/run.sh && \
    echo 'cd "$(dirname "$0")"' >> /output/run.sh && \
    echo 'echo "üõ°Ô∏è  SecurityChecker"' >> /output/run.sh && \
    echo 'echo "=================="' >> /output/run.sh && \
    echo 'echo ""' >> /output/run.sh && \
    echo 'if [[ $EUID -ne 0 ]]; then' >> /output/run.sh && \
    echo '    echo "‚ö†Ô∏è  Este programa precisa ser executado como root."' >> /output/run.sh && \
    echo '    echo "   Execute: sudo ./run.sh"' >> /output/run.sh && \
    echo '    exit 1' >> /output/run.sh && \
    echo 'fi' >> /output/run.sh && \
    echo './SecurityChecker' >> /output/run.sh && \
    chmod +x /output/run.sh

# Comando padr√£o para manter container vivo para extra√ß√£o
CMD ["sleep", "1"]